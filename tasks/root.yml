---
- name: install squid with ssl support from ppa
  import_tasks: install-ppa.yml
  when: squid_from_ppa |bool
  tags: srv_squid_install

- name: install squid4 with from universe
  import_tasks: install-squid4.yml
  when: not squid_from_ppa |bool
  tags: srv_squid_install


- name: setup self-signed ssl certificate for squid
  import_tasks: ssl-selfsigned.yml
  when: squid_ssl_enable |bool
        and self_signed
  tags: srv_squid_ssl

- name: configure letsencrypt certificate for squid
  import_tasks: ssl-letsencrypt.yml
  when: squid_ssl_enable |bool
        and not self_signed
        and certbot_group |default('')
  tags: srv_squid_ssl


- name: add squid hosts for upstream peers
  import_tasks: hosts.yml
  tags:
    - srv_squid_config
    - srv_squid_hosts

- name: configure squid
  import_tasks: config.yml
  tags: srv_squid_config

- name: url-rewrite for squid
  import_tasks: url-rewrite.yml
  when: squid_url_rewrite |default([],true) |length > 0
  tags: srv_squid_config


- name: perform squid cloaking
  import_tasks: cloaking.yml
  when: squid_cloaking |bool
  tags: srv_squid_cloaking


- name: setup ufw firewall for squid
  import_tasks: firewall-ufw.yml
  when: lin_firewall == 'ufw'
  tags: srv_squid_firewall

- name: setup ferm firewall for squid
  import_tasks: firewall-ferm.yml
  when: lin_firewall == 'ferm'
  tags: srv_squid_firewall

- name: transparent iptables rules for squid from ppa
  import_tasks: iptables.yml
  when: lin_firewall in ['ufw', 'ferm']
        and squid_from_ppa |bool
  tags: srv_squid_iptables


- name: stop obsolete squid service (ok to fail, if not found)
  systemd:
    name: squid
    state: stopped
    enabled: false
    daemon_reload: true
  when: squid_from_ppa |bool
        and squid_ssl_ppa is defined
        and squid_ssl_ppa is changed
  ignore_errors: true
  tags: srv_squid_service

- name: activate squid service
  systemd:
    name: "{{ squid_pkg }}"
    state: started
    enabled: true
    daemon_reload: "{{ squid_from_ppa |bool }}"
  tags: srv_squid_service


- name: directory for distributed pac files
  file:
    path: "{{ squid_etc_dir }}/pac"
    state: directory
    owner: root
    group: "{{ web_group }}"
    mode: 0750
  when: web_group is defined
  tags: srv_squid_pac

- name: generate pac files
  template:
    src: squid.pac.j2
    dest: "{{ squid_etc_dir }}/pac/{{ item.name }}.pac"
    owner: root
    group: "{{ web_group }}"
    mode: 0640
  loop: "{{ squid_pac.pac_types }}"
  loop_control:
    label: "{{ item.name }}"
  when: web_group is defined
  tags: srv_squid_pac


- name: enable/disable compression of squid logs
  replace:
    path: "/etc/logrotate.d/{{ squid_pkg }}"
    regexp: "{{ lookbehind }}(compress|delaycompress)"
    replace: "{{ commentout }}\\1"
  vars:
    lookbehind: "{{ lin_compress_logs |bool |ternary('(?:#\\s*)','(?<!#)') }}"
    commentout: "{{ lin_compress_logs |bool |ternary('','#') }}"
  when: lin_compress_logs is not none
  tags: srv_squid_logs

- name: setup dns records in cloudflare for squid
  import_role:
    name: ivansible.srv_cdn
    tasks_from: cloudflare.yml
  vars:
    records: "{{ squid_cloudflare_dns }}"
  when: squid_cloudflare_dns is defined
  tags: srv_squid_cloudflare
...
