---
- name: install ansible openssl bindings
  apt:
    name: "{{ lin_use_python2 |bool |ternary(packages_pythons, packages_python3) }}"
    state: present
  vars:
    packages_pythons: python3-openssl,python3-pip,python-openssl,python-pip
    packages_python3: python3-openssl,python3-pip

- block:
    - name: verify validity of pyOpenSSL (ansible openssl bindings)
      command:
        argv:
          - "{{ ansible_python.executable }}"
          - -c
          - "from OpenSSL import SSL"
      changed_when: false
  rescue:
    - name: upgrade ansible openssl bindings
      command:
        argv:
          - "{{ ansible_python.executable }}"
          - -m
          - pip
          - install
          - --upgrade
          - pyOpenSSL

- name: check whether squid ssl files need to be generated
  stat:
    path: "{{ ss_cert }}.{{ item }}"
  loop: [crt, key, csr, bundle.pem]
  register: _squid_ss_cert
  changed_when: not _squid_ss_cert.stat.exists
  notify: restart squid service

- name: generate squid self-signed ssl files
  block:
    - name: generate ssl private key (4096 bits, rsa) for squid
      openssl_privatekey:
        path: "{{ ss_cert }}.key"
        owner: root
        group: "{{ squid_group }}"
        mode: 0640

    - name: generate certificate signing request for squid
      openssl_csr:
        path: "{{ ss_cert }}.csr"
        privatekey_path: "{{ ss_cert }}.key"
        common_name: "{{ squid_host }}"
        owner: root
        group: "{{ squid_group }}"
        mode: 0640

    - name: generate self-signed ssl certificate for squid
      openssl_certificate:
        path: "{{ ss_cert }}.crt"
        privatekey_path: "{{ ss_cert }}.key"
        csr_path: "{{ ss_cert }}.csr"
        provider: selfsigned
        owner: root
        group: "{{ squid_group }}"
        mode: 0640

    - name: make self-signed certificate bundle
      shell: cat "{{ ss_cert }}.crt" "{{ ss_cert }}.key" > "{{ ss_cert }}.bundle.pem"
      when: not squid_from_ppa |bool

    - name: ensure self-signed bundle permissions
      file:
        path: "{{ ss_cert }}.bundle.pem"
        state: file
        owner: root
        group: "{{ squid_group }}"
        mode: 0640
      when: not squid_from_ppa |bool

  when: _squid_ss_cert is changed
        and not ansible_check_mode
...
